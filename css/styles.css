body,
div,
dl,
dt,
dd,
ul,
li,
h1,
h2,
h3,
h4,
h5,
h6,
pre,
code,
form,
fieldset,
input,
textarea,
p,
blockquote,
th,
td {
  margin: 0;
  padding: 0;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

fieldset,
img,
abbr {
  border: 0;
}

address,
caption,
cite,
code,
dfn,
em,
strong,
th,
var {
  font-style: normal;
  font-weight: normal;
}

ul li {
  list-style: none;
}

caption,
th {
  text-align: left;
}

h1,
h2,
h3,
h4,
h5,
h6 {
  font-size: 100%;
  font-weight: normal;
}

sup {
  vertical-align: text-top;
}

sub {
  vertical-align: text-bottom;
}

input,
textarea,
select {
  font-family: inherit;
  font-size: inherit;
  font-weight: inherit;
}

legend {
  color: #000;
}

article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
menu,
nav,
section,
main {
  display: block;
}

img {
  max-width: 100%;
  height: auto;
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

.container {
  max-width: 1340px;
  margin: 0 auto;
  padding-left: 70px;
  padding-right: 70px;
}

::-webkit-input-placeholder {
  color: #666;
}

::-moz-placeholder {
  color: #666;
}

:-ms-input-placeholder {
  color: #666;
}

::placeholder {
  color: #666;
}

::-moz-selection {
  background-color: #ffd95e;
  color: #fff;
}

::selection {
  background-color: #ffd95e;
  color: #fff;
}

.visually-hidden {
  position: absolute;
  clip: rect(0 0 0 0);
  width: 1px;
  height: 1px;
  margin: -1px;
}

body {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
          flex-direction: column;
  font-family: 'Roboto Condensed', sans-serif;
  font-size: 16px;
  font-weight: 300;
  color: #2c2b29;
  min-width: 320px;
  min-height: 100vh;
  position: relative;
}

body:not(.home) section {
  padding-top: 35px;
}

section,
header,
footer {
  position: relative;
  z-index: 1;
}

.section-header {
  font-weight: 700;
  font-size: 57px;
  line-height: 1;
  letter-spacing: -0.02em;
}

.btn {
  display: inline-block;
  padding: 23px 30px;
  color: #ffffff;
  background-color: #6d8ca9;
  font-size: 21px;
  font-weight: 400;
  text-decoration: none;
  border-radius: 15px;
  box-shadow: 0px 10px 8.2px 1.8px rgba(0, 0, 0, 0.08);
  transition: all 0.3s ease;
}

.btn:hover {
  color: #2c2b29;
  background-color: #ffd95e;
}

.breadcrumbs {
  margin-top: 5px;
  margin-bottom: 49px;
}

.breadcrumbs a {
  color: inherit;
  transition: color 0.3s ease;
}

.breadcrumbs a:hover {
  color: #ffd95e;
}

.header__top {
  color: #ffffff;
  background-color: #365069;
}

.header__top a {
  color: inherit;
  text-decoration: none;
  transition: color 0.3s ease;
}

.header__top a:hover {
  color: #ffd95e;
}

.header__top-wrapper {
  padding-top: 11px;
  padding-bottom: 8px;
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: space-between;
          justify-content: space-between;
  -webkit-align-items: center;
          align-items: center;
}

.header__contacts,
.header__adress,
.header__email {
  display: -webkit-flex;
  display: flex;
  -webkit-align-items: center;
          align-items: center;
  font-size: 13px;
}

.header__contacts svg,
.header__adress svg,
.header__email svg {
  margin-right: 5px;
}

.header__adress,
.header__email {
  margin-right: 30px;
}

.header__social {
  display: -webkit-flex;
  display: flex;
}

.header__social li + li {
  margin-left: 10px;
}

.header__mid {
  padding-top: 13px;
  padding-bottom: 18px;
}

.header__mid-wrapper {
  display: -webkit-flex;
  display: flex;
  -webkit-justify-content: space-between;
          justify-content: space-between;
  -webkit-align-items: center;
          align-items: center;
}

.header__btn {
  display: -webkit-flex;
  display: flex;
  -webkit-align-items: center;
          align-items: center;
  padding: 15px 20px;
  color: #2c2b29;
  background-color: #ece0b8;
  font-size: 16px;
  transition: all 0.3s ease;
}

.header__btn:hover {
  color: #ffffff;
  background-color: #6d8ca9;
}

.header__btn svg {
  margin-right: 5px;
}

.header__time p {
  font-size: 15px;
}

.header__time p b {
  display: inline-block;
  margin-bottom: 5px;
  text-transform: uppercase;
  color: #365069;
  font-size: 19px;
  font-weight: 700;
}

.header__bottom {
  background-color: #f1f1f1;
}

.header__bottom .sub-menu {
  display: none;
}

.header__bottom .current-menu-item a {
  color: #ffffff;
  background-color: #6d8ca9;
  border-radius: 10px;
}

.header__menu {
  display: -webkit-flex;
  display: flex;
}

.header__menu a {
  display: inline-block;
  padding: 15px 13px;
  color: inherit;
  font-weight: 400;
  text-decoration: none;
  transition: all 0.3s ease;
}

.header__menu a:hover {
  color: #ffffff;
  background-color: #365069;
  border-radius: 10px;
}

.news__header {
  margin-bottom: 35px;
}

.news__list {
  margin-bottom: 30px;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
}

.news__item {
  margin-bottom: 30px;
  margin-right: 20px;
  width: 218px;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-direction: column;
          flex-direction: column;
}

.news__text {
  -webkit-flex-shrink: 2;
          flex-shrink: 2;
}

.news__image {
  -webkit-flex-shrink: 1;
          flex-shrink: 1;
  margin-bottom: 20px;
  width: 218px;
  height: 155px;
  border-radius: 18px;
}

.news__image a {
  display: block;
  width: 100%;
  height: 100%;
}

.news__image img {
  width: 218px;
  height: 155px;
  -o-object-fit: cover;
     object-fit: cover;
  border-radius: 18px;
}

.news__date {
  margin-bottom: 10px;
  display: inline-block;
  padding: 2px 10px;
  color: #ffffff;
  background-color: #6d8ca9;
  border-radius: 8px;
  font-size: 12px;
}

.news__title {
  margin-bottom: 12px;
  font-weight: 700;
  font-size: 16px;
  min-height: 36px;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.news__title a {
  text-decoration: none;
  color: inherit;
  transition: color 0.3s ease;
}

.news__title a:hover {
  color: #ffd95e;
}

.news__descr {
  margin-bottom: 10px;
  font-size: 15px;
  min-height: 68px;
  display: -webkit-box;
  -webkit-line-clamp: 4;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

.news__link {
  position: relative;
  display: block;
  text-align: right;
  font-size: 13px;
  color: inherit;
  transition: color 0.3s ease;
}

.news__link::after {
  position: relative;
  content: ' >>';
  right: 0;
}

.news__link:hover {
  color: #ffd95e;
}

.about__content {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.about__text {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(66.66666666666667% - 30px);
  margin-bottom: 80px;
}

.about__text p,
.about__text div {
  margin: 20px 0;
}

.about__image {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(33.333333333333336% - 30px);
  width: 367px;
  height: auto;
  border-radius: 20px;
}

.about__image img {
  border-radius: 20px;
}

.outer {
  padding-top: 40px;
  padding-bottom: 65px;
}

.outer__list {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  padding: 60px 40px 50px;
  background-color: #f6f6f6;
  border-radius: 30px;
}

.outer__list li {
  width: 248px;
  display: -webkit-flex;
  display: flex;
  -webkit-align-items: center;
          align-items: center;
  padding: 14px 12px;
  margin: 0 15px 23px;
  background-color: #fcfcfc;
  border: 1px solid #dfdfdf;
  border-radius: 15px;
}

.outer__image {
  width: 43px;
  height: 47px;
  margin-right: 15px;
  -webkit-flex-shrink: 0;
          flex-shrink: 0;
}

.outer__image img {
  width: 47px;
  height: 47px;
  -o-object-fit: contain;
     object-fit: contain;
}

.outer__header {
  font-size: 15px;
  line-height: 22px;
}

.footer {
  padding: 30px 0;
  margin-top: auto;
  color: #ffffff;
  background-color: #365069;
}

.footer__content {
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  margin-left: -15px;
  margin-right: -15px;
}

.footer__info {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(50% - 30px);
  font-size: 14px;
}

.footer__nav {
  box-sizing: border-box;
  word-wrap: break-word;
  margin-left: 15px;
  margin-right: 15px;
  width: calc(50% - 30px);
  margin-top: 20px;
  font-size: 15px;
  display: -webkit-flex;
  display: flex;
  -webkit-flex-wrap: wrap;
          flex-wrap: wrap;
  -webkit-justify-content: space-between;
          justify-content: space-between;
}

.footer__right-menu {
  margin: 0 15px;
}

.footer__right-menu li {
  margin-bottom: 4px;
}

.footer__submenu {
  margin: 0 15px;
}

.footer__submenu-title {
  font-weight: 400;
  margin-bottom: 8px;
  font-size: 18px;
}

.footer__submenu li {
  margin-bottom: 4px;
}

.footer__copy {
  margin-top: 14px;
}

.footer__left-menu {
  margin-top: 14px;
}

.footer__left-menu li {
  margin-bottom: 4px;
}

.footer a:not(.footer__logo) {
  text-decoration: none;
  color: inherit;
  transition: color 0.3s ease;
}

.footer a:not(.footer__logo):hover {
  color: #ffd95e;
}

@media screen and (max-width: 992px) {
  .outer__list {
    -webkit-justify-content: center;
            justify-content: center;
  }

  .footer__info {
    width: calc(100% - 30px);
  }

  .footer__nav {
    width: calc(100% - 30px);
  }
}

@media screen and (max-width: 576px) {
  .container {
    padding-left: 20px;
    padding-right: 20px;
  }

  .news__item {
    -webkit-flex-direction: row;
            flex-direction: row;
    width: 100%;
  }

  .news__image {
    margin-right: 10px;
  }

  .news__btn {
    display: block;
    text-align: center;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
